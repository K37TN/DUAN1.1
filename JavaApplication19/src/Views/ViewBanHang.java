/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Model.GioHang;
import Model.HoaDon;
import Model.HoaDonChiTiet;
import Model.sanPham;
import Repository.SanPhamRepository;
import Repositorys.ImplSanPham;
import Service.ChiTietSPServices;
import Service.HoaDonServies;
import Services.ImplChiTietSPService;
import Services.ImplHoaDonService;
import ViewFrame.KhachBH;
import entity.HoaDonChiTietViewModel;
import entity.HoaDonViewModel;
import entity.sanPhamViewModel;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FPTSHOP
 */
public class ViewBanHang extends javax.swing.JFrame {

private DefaultTableModel model;
   private DefaultTableModel modelGioHang;
       private ImplHoaDonService hoaDonServiec;
       private ImplChiTietSPService spService;
        DefaultTableModel defaultTableModel;
    DefaultTableModel defaultTableModel1;
      List<sanPham> list;
         private ImplSanPham repository;
         private List<GioHang> listGioHang = new ArrayList<>();
    public ViewBanHang() {
        initComponents();
        hoaDonServiec = new HoaDonServies();
      spService = new ChiTietSPServices();
        getListHoaDon();
        defaultTableModel = (DefaultTableModel) tb_sanpham.getModel();
        repository = new SanPhamRepository();
         LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_HoaDon = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_xoa = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_tongtien = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_thanhtien = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_tienKhachDua = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_ghichu = new javax.swing.JTextArea();
        btn_thanhtoan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lbl_tenkh = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_sdt = new javax.swing.JLabel();
        btn_khachhang = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_sanpham = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_giohang = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_HoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã HD", "Ngày Tạo", "Trạng Thái", "Tên NV"
            }
        ));
        tbl_HoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_HoaDon);

        jButton2.setText("Tạo HĐ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Hóa đơn chờ");

        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(533, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(btn_xoa))
                .addGap(11, 11, 11))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_xoa)
                        .addGap(11, 11, 11)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Thanh Toán");

        jLabel5.setText("Tổng Tiền");

        lbl_tongtien.setForeground(new java.awt.Color(255, 51, 51));
        lbl_tongtien.setText("0");

        jLabel7.setText("Khách Cần Trả");

        lbl_thanhtien.setForeground(new java.awt.Color(255, 51, 51));
        lbl_thanhtien.setText("0");

        jLabel9.setText("Tiền Khách Đưa");

        txt_tienKhachDua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tienKhachDuaActionPerformed(evt);
            }
        });

        jLabel10.setText("Ghi Chú");

        txt_ghichu.setColumns(20);
        txt_ghichu.setRows(5);
        jScrollPane5.setViewportView(txt_ghichu);

        btn_thanhtoan.setText("Thanh Toán");
        btn_thanhtoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thanhtoanActionPerformed(evt);
            }
        });

        jLabel6.setText("Tên khách hàng");

        jLabel8.setText("Số điện thoại");

        btn_khachhang.setText("Khách hàng");
        btn_khachhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_khachhangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_khachhang)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9)
                        .addComponent(txt_tienKhachDua)
                        .addComponent(jScrollPane5)
                        .addComponent(btn_thanhtoan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_tongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_thanhtien, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_tenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_khachhang)
                        .addGap(34, 34, 34)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lbl_tenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(lbl_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tongtien)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbl_thanhtien))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_tienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_thanhtoan)
                .addGap(17, 17, 17))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Sản Phẩm");

        tb_sanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Màu Sắc", "Chất Liệu", "Kích Cỡ", "Giá Bán", "Số Lượng"
            }
        ));
        tb_sanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_sanphamMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tb_sanpham);

        jScrollPane4.setViewportView(jScrollPane3);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(72, 72, 72)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_giohang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Số Lượng", "Màu Sắc", "Chất Liệu", "Kích Thước", "Đơn Giá ", "Thành Tiền"
            }
        ));
        jScrollPane1.setViewportView(tbl_giohang);

        jButton1.setText("Xóa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Giỏ Hàng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(67, 67, 67))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_HoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonMouseClicked
        int row = tbl_HoaDon.getSelectedRow();
        if (row < 0) {
            return;
        }
        listGioHang.clear();
        String MaHD = tbl_HoaDon.getValueAt(row, 0).toString();
        System.out.println("MaHD: " + MaHD);
        try {
            lbl_tongtien.setText(String.valueOf(0));
            

            getListGioHangHDCT(MaHD);
            lbl_tenkh.setText("");
            lbl_sdt.setText("");
          
            Double tongPT = 0.0;
            Double tongVN = 0.0;
            Double tongTien = 0.0;
  
            int count = 0;
            List<GioHang> list = hoaDonServiec.getListHoaDonChiTietByMaHd(MaHD);
            System.out.println("list: " + list.get(0).getChatLieu());
            for (GioHang x : list) {
                tongTien = tongTien + x.getThanhTien();
                lbl_tongtien.setText(String.format("%.0f", tongTien));



             

                count++;

            }
            Double ThanhTien = Double.parseDouble(lbl_tongtien.getText());
            lbl_thanhtien.setText(String.valueOf(String.format("%.0f", ThanhTien)));

        } catch (Exception e) {
            lbl_tongtien.setText(String.valueOf(0));
           
            lbl_thanhtien.setText(String.valueOf(0));
        }
    }//GEN-LAST:event_tbl_HoaDonMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        HoaDonViewModel hoaDon = inputHD();
        Integer add = hoaDonServiec.saveHD(hoaDon);
        if (add > 0) {
            System.out.println("thêm thành công");
            List<HoaDonViewModel> list = hoaDonServiec.getListHD(1);
            list.clear();
            getListHoaDon();
        } else {
            System.out.println("thêm thất bại");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tb_sanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_sanphamMouseClicked
        int row = tb_sanpham.getSelectedRow();
int rowHD = tbl_HoaDon.getSelectedRow();
if (row < 0) {
    return;
}
if (rowHD < 0) {
    JOptionPane.showMessageDialog(this, "Bạn cần chọn hóa đơn để thêm sản phẩm!");
    return;
}
int sanPhamId = new SanPhamRepository().getIdSanPham(tb_sanpham.getValueAt(row, 0).toString());
int hoaDonId = new HoaDonServies().getIdHD(tbl_HoaDon.getValueAt(rowHD, 0).toString());
HoaDonChiTiet hdct1 = hoaDonServiec.getHdctOne(hoaDonId, sanPhamId);
        System.out.println("hdct1: " + sanPhamId);
        System.out.println("hdct1: " + hoaDonId);
        System.out.println("hdct1: " + hdct1.getDonGia());
        System.out.println("row: " + row);
if (hdct1.getDonGia() == null) {
    // xử lý thêm sản phẩm vào hóa đơn
} else {
    JOptionPane.showMessageDialog(this, "SP Trung");
}

try {
    int NhapSoLuong = Integer.parseInt(JOptionPane.showInputDialog(this, "Nhập Số Lượng!"));
    String MaSP = tb_sanpham.getValueAt(row, 0).toString();
    String TenSP = tb_sanpham.getValueAt(row, 1).toString();
    int SoLuong = Integer.parseInt(tb_sanpham.getValueAt(row, 6).toString());
    Double DonGia = Double.parseDouble(tb_sanpham.getValueAt(row, 5).toString());
    List<GioHang> listh = hoaDonServiec.getListHoaDonChiTietByMaHd(tbl_HoaDon.getValueAt(rowHD, 0).toString());
    
    // kiểm tra và cập nhật giỏ hàng
    if (SoLuong >= NhapSoLuong) {
        for (GioHang x : listh) {
            if (x.getMa().equals(MaSP)) {
                // cập nhật số lượng trong giỏ hàng
                int hoaDonChiTietEdit = hoaDonServiec.updateSOLUONGTrenGioHang(hoaDonId, sanPhamId, x.getSoLuong() + NhapSoLuong, DonGia);
                int kq = SoLuong - NhapSoLuong;
                spService.updateSoLuongSP(MaSP, kq);
                 List<sanPham> list = spService.getList();
                            list.clear();
               getListSP();
                getListGioHangHDCT(tbl_HoaDon.getValueAt(rowHD, 0).toString());
                
                if (hoaDonChiTietEdit > 0) {
                    JOptionPane.showMessageDialog(this, "Update thành công số lượng!");
                }
                return;
            }
        }
        // thêm sản phẩm vào giỏ hàng nếu chưa có
        HoaDonChiTietViewModel hdct = inputHDCT(DonGia, NhapSoLuong);
        hoaDonServiec.saveHDCT(hdct, MaSP, tbl_HoaDon.getValueAt(rowHD, 0).toString());
        listGioHang.add(new GioHang(MaSP, TenSP, NhapSoLuong, DonGia, tb_sanpham.getValueAt(row, 2).toString(), tb_sanpham.getValueAt(row, 3).toString(), tb_sanpham.getValueAt(row, 4).toString()));
        getListGioHang();
        int kq = SoLuong - NhapSoLuong;
        spService.updateSoLuongSP(MaSP, kq);
        getListSP();
      
    } else if (SoLuong < NhapSoLuong) {
        JOptionPane.showMessageDialog(this, "Sản phẩm không đủ ");
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
}
    }//GEN-LAST:event_tb_sanphamMouseClicked

    private void btn_khachhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_khachhangActionPerformed
         int rowHD = tbl_HoaDon.getSelectedRow();
        if (rowHD < 0) {
            JOptionPane.showMessageDialog(this, "chọn hoá đơn bạn muốn thêm khách hàng vào");
            return;
        }
        KhachHang2 kh = new KhachHang2(tbl_HoaDon.getValueAt(rowHD, 0).toString());
        kh.addWindowListener(windowAdapter);
        kh.setVisible(true);
        if (rowHD < 0) {
            JOptionPane.showMessageDialog(this, "chọn 1 hoá đơn hiện thị khách hàng");
            return;
        }
    }//GEN-LAST:event_btn_khachhangActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rowSP = tbl_giohang.getSelectedRow();
        int rowHD = tbl_HoaDon.getSelectedRow();
        if (rowSP < 0) {
            JOptionPane.showMessageDialog(this, "chọn 1 sản phẩm trong giỏ hàng để xoá");
            return;
        }
        if (rowHD < 0) {
            JOptionPane.showMessageDialog(this, "chọn Hoá đơn bạn muốn xoá sản phẩm đấy");
            return;
        }
        String MaSP = tbl_giohang.getValueAt(rowSP, 0).toString();
        String MaHD = tbl_HoaDon.getValueAt(rowHD, 0).toString();
        Integer soLuong = Integer.parseInt(tbl_giohang.getValueAt(rowSP, 2).toString());
        Integer idSP = spService.getIdSanPham(MaSP);
        Integer idHd = hoaDonServiec.getIdHD(MaHD);
        Integer isDelete = hoaDonServiec.deleteSanPham(idHd, idSP);
        List<sanPham> list = spService.getList();
        for (sanPham x : list) {
            if (MaSP.equals(x.getMa())) {
                spService.updateSoLuongSP(MaSP, x.getSoLuongTon() + soLuong);
                list.clear();
                getListSP();
                getListGioHangHDCT(MaHD);
                mousecl();
                break;
            }
        }
        listGioHang.clear();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_thanhtoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thanhtoanActionPerformed
        int rowHD = tbl_HoaDon.getSelectedRow();
if (rowHD < 0) {
    JOptionPane.showMessageDialog(this, "chọn hoá đơn bạn muốn thanh toán");
    return;
}
if (lbl_tenkh.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "chưa có thông tin khách hàng");
    return;
}
if (txt_tienKhachDua.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "tiền khách Đưa không được để trống");
    return;
}
try {
    if (Double.parseDouble(txt_tienKhachDua.getText()) < Double.parseDouble(lbl_thanhtien.getText())) {
        JOptionPane.showMessageDialog(this, "tiền khách Đưa chưa đủ");
        return;
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "không nhập kí tự tiền khách đưa");
    return;
}
HoaDonViewModel hoaDon = new HoaDonViewModel();
hoaDon.setGhiChu(txt_ghichu.getText());
long millis = System.currentTimeMillis();
Date date = new Date(millis);
hoaDon.setNgayThanhToan(date);
hoaDon.setMa(tbl_HoaDon.getValueAt(rowHD, 0).toString());
hoaDon.setTongTien(Double.parseDouble(lbl_thanhtien.getText()));
hoaDonServiec.updateTrangThaiHoaDon(hoaDon);
JOptionPane.showMessageDialog(this, "thanh toán thành công");
List<HoaDonViewModel> getList = hoaDonServiec.getListHD(1);
for (HoaDonViewModel hoaDonViewModel : getList) {
    if (tbl_HoaDon.getValueAt(rowHD, 0).equals(hoaDonViewModel.getMa())) {
        getList.remove(hoaDonViewModel);
        getList.clear();
        clear();
        getListHoaDon();
        listGioHang.clear();
        getListGioHang();
        break;
    }
}
    }//GEN-LAST:event_btn_thanhtoanActionPerformed

    private void txt_tienKhachDuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tienKhachDuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tienKhachDuaActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
         int selected = tbl_HoaDon.getSelectedRow();
         // Kiểm tra xem có hàng nào được chọn không
    if (selected == -1) {
        JOptionPane.showMessageDialog(null, "Vui lòng chọn hóa đơn cần xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Lấy mã hóa đơn từ cột dữ liệu của hàng được chọn
    String maHoaDon = tbl_HoaDon.getValueAt(selected, 0).toString(); // Giả sử mã hóa đơn nằm ở cột đầu tiên
    
    // Gọi phương thức deleteHoaDon để xóa hóa đơn
    int result = hoaDonServiec.deleteHoaDon(maHoaDon);
    
    if (result > 0) {
        JOptionPane.showMessageDialog(null, "Hóa đơn đã được xóa thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
   
 
      
     
        
    } else {
        JOptionPane.showMessageDialog(null, "Không tìm thấy hóa đơn với mã " + maHoaDon, "Thông báo", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_btn_xoaActionPerformed
private HoaDonViewModel inputHD() {
     HoaDonViewModel hd = new HoaDonViewModel();    
    String Ma = "HD";
        Random random = new Random();
        hd.setMa(Ma + random.nextInt());

        long millis = System.currentTimeMillis();
        Date date = new Date(millis);
        hd.setNgayTao(date);

        return hd;
    }
private String getTrangThaiHD(int TrangThai) {
        if (TrangThai == 0) {
            return "chờ thanh Toán";
        }
        if (TrangThai == 1) {
            return "Đã thanh Toán";
        }

        return null;
    }
    private void clear() {
        lbl_sdt.setText("");
     
        lbl_tongtien.setText(String.valueOf(0));
    
        lbl_thanhtien.setText(String.valueOf(0));
//        lbl_diemThuong.setText(String.valueOf(0));
        txt_tienKhachDua.setText("");
        
        txt_ghichu.setText("");
        lbl_sdt.setText("");

        lbl_tenkh.setText("");

    }
private void getListHoaDon() {
        model = (DefaultTableModel) tbl_HoaDon.getModel();
        model.setRowCount(0);
        List<HoaDonViewModel> getList = hoaDonServiec.getListHD(0);
        for (HoaDonViewModel x : getList) {
            model.addRow(new Object[]{
                x.getMa(),
                x.getNgayTao(),
  
                getTrangThaiHD(x.getTinhTrang()),
 "manhndph33006"        
            });
        }
    }
private void getListGioHang() {
        modelGioHang = (DefaultTableModel) tbl_giohang.getModel();
        modelGioHang.setRowCount(0);
        for (GioHang x : listGioHang) {
            modelGioHang.addRow(new Object[]{
                x.getMa(),
                x.getTen(),
                x.getSoLuong(),
                x.getMauSac(),
                x.getChatLieu(),
                x.getKichThuoc(),
                String.format("%.0f", x.getDonGia()),
                String.format("%.0f", x.getThanhTien())
            });
        }
    }
  private void getListGioHangHDCT(String MaHD) {
        modelGioHang = (DefaultTableModel) tbl_giohang.getModel();
        modelGioHang.setRowCount(0);
        listGioHang.clear();
        List<GioHang> list = hoaDonServiec.getListHoaDonChiTietByMaHd(MaHD);
        if (list.isEmpty()) {
            return;
        }
        for (GioHang x : list) {
            GioHang gioHang = new GioHang();
            gioHang.setMa(x.getMa());
            gioHang.setTen(x.getTen());
            gioHang.setSoLuong(x.getSoLuong());
            gioHang.setDonGia(x.getDonGia());
          
            gioHang.setMauSac(x.getMauSac());
            gioHang.setKichThuoc(x.getKichThuoc());
            gioHang.setChatLieu(x.getChatLieu());
   
            listGioHang.add(gioHang);
            getListGioHang();

        }
    }
void LoadData() {
        defaultTableModel.setRowCount(0);
        
        for (sanPham x : repository.getAll()) {
            defaultTableModel.addRow(new Object[]{
              
                x.getMa(),
                x.getTen(),
    x.getMauSac(),
         x.getChatLieu(),
         x.getKichCo(),
                x.getGiaBan(),
              
                x.getSoLuongTon(),
                  
            });
          
        }}
  private HoaDonChiTietViewModel inputHDCT(Double DonGia, int SoLuong) {
        HoaDonChiTietViewModel hdct = new HoaDonChiTietViewModel();
        hdct.setDonGia(DonGia);
        hdct.setSoluong(SoLuong);

        return hdct;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewBanHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewBanHang().setVisible(true);
            }
        });
    }
    WindowAdapter windowAdapter = new WindowAdapter() {
    @Override
        public void windowClosed(WindowEvent e) {
                                                    
            int rowHD = tbl_HoaDon.getSelectedRow();
            List<HoaDon> getList = hoaDonServiec.getKhachHang(tbl_HoaDon.getValueAt(rowHD, 0).toString());
            for (HoaDon hoaDon : getList) {
                lbl_tenkh.setText(hoaDon.getKhachHang().getTen());
                lbl_sdt.setText(hoaDon.getKhachHang().getSdt());
                return;
            }
        }
  
    };
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_khachhang;
    private javax.swing.JButton btn_thanhtoan;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lbl_sdt;
    private javax.swing.JLabel lbl_tenkh;
    private javax.swing.JLabel lbl_thanhtien;
    private javax.swing.JLabel lbl_tongtien;
    private javax.swing.JTable tb_sanpham;
    private javax.swing.JTable tbl_HoaDon;
    private javax.swing.JTable tbl_giohang;
    private javax.swing.JTextArea txt_ghichu;
    private javax.swing.JTextField txt_tienKhachDua;
    // End of variables declaration//GEN-END:variables
   private void getListSP() {
        model = (DefaultTableModel) tb_sanpham.getModel();
        model.setRowCount(0);
        List<sanPham> getList = spService.getList();
        for (sanPham x : getList) {
            model.addRow(new Object[]{
                x.getMa(),
                x.getTen(),
                x.getMauSac(),
                x.getChatLieu(),
                x.getKichCo(),
                String.format("%.0f", x.getGiaBan()),
                x.getSoLuongTon(),});
        }
    }
   private void mousecl() {
        int rowHD = tbl_HoaDon.getSelectedRow();
        int row = tbl_HoaDon.getSelectedRow();
        if (row < 0) {
            return;
        }
        listGioHang.clear();
        String MaHD = tbl_HoaDon.getValueAt(row, 0).toString();
        lbl_tongtien.setText(String.valueOf(0));
       
        lbl_tongtien.setText(String.valueOf(0));
        getListGioHangHDCT(MaHD);
        Double tongPT = 0.0;
        Double tongVN = 0.0;
        Double tongTien = 0.0;

        int count = 0;
        List<GioHang> list = hoaDonServiec.getListHoaDonChiTietByMaHd(MaHD);
        for (GioHang x : list) {
            tongTien = tongTien + x.getThanhTien();
            lbl_tongtien.setText(String.format("%.0f", tongTien));
            List<sanPham> listSanPham = spService.getList();

            count++;
        }
        Double ThanhTien = Double.parseDouble(lbl_tongtien.getText());
        lbl_thanhtien.setText(String.valueOf(String.format("%.0f", ThanhTien)));


    }
}
